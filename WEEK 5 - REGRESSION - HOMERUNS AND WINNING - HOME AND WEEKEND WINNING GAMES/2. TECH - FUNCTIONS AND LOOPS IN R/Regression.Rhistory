

#################################
#                               #
(OPSdf)
setwd("./data/Regression")
OPSdf = read.csv("OPSdf.csv")
summary(OPSdf)
View(OPSdf)
head(OPS12,20)

boxplot(head(OPSdf$OPS12, 20), OPSdf$OPS13[(rank(-OPSdf$OPS12) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nTop 20 2012 OPS to 2013",
ylab = "OPS", ylim = c(0.6,1.1))

summary(head(OPS12,20))
summary(head(OPSdf$OPS12,20))

summary(OPSdf$OPS13[(rank(-OPSdf$OPS12) <= 20)])
head(OPS12,10)
tail(OPSdf$OPS12,20)


boxplot(tail(OPSdf$OPS12, 20), OPSdf$OPS13[(rank(OPSdf$OPS12) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nBottom 20 2012 OPS to 2013",
ylab = "OPS", ylim = c(0.35,0.95))

summary(tail(OPSdf$OPS12,20))

tail(OPSdf$OPS12,10)

boxplot(tail(OPSdf$OPS12, 10), OPSdf$OPS13[(rank(OPSdf$OPS12) <= 10)], col="yellow",
main = "Regression to the Mean Example:\nBottom 10 2012 OPS to 2013",
ylab = "OPS", ylim = c(0.35,0.95))

summary(tail(OPSdf$OPS12,10))
summary(OPSdf$OPS13[(rank(OPSdf$OPS12) <= 10)])

PitcherRegression = read.csv("Pitcherdf.csv")
summary(PitcherRegression)
attach(PitcherRegression)
head(KRate13,20)

boxplot(head(Pitcherdf$KRate13, 20), KRate14[(rank(-Pitcherdf$KRate13) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nTop 20 2013 KRate to 2014",
ylab = "KRate", ylim = c(0.10,.35))

summary(head(Pitcherdf$KRate13,20))
summary(head(KRate13,20))
summary(Rate14[(rank(-KRate13) <= 20)])
summary(KRate14[(rank(-KRate13) <= 20)])

boxplot(tail(KRate13, 20), KRate14[(rank(KRate13) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nBottom 20 2013 KRate to 2014",
ylab = "KRate", ylim = c(0.10,.35))

boxplot(head(ERA13, 20), ERA14[(rank(ERA13) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nTop 20 2013 ERA to 2014",
ylab = "ERA", ylim = c(1.5,6.5))

summary(head(ERA13,20))
summary(ERA14[(rank(ERA13) <= 20)])
tail(ERA13,20)

boxplot(tail(ERA13, 20), ERA14[(rank(-ERA13) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nBottom 20 2013 ERA to 2014",
ylab = "ERA", ylim = c(1.5,6.5))

boxplot(head(BABIP13, 20), BABIP14[(rank(BABIP13) <= 20)], col="tomato",
main = "Regression to the Mean Example:\nTop 20 2013 BABIP to 2014",
ylab = "BABIP", ylim = c(.240,.360))

summary(head(BABIP13,20))
summary(BABIP14[(rank(BABIP13) <= 20)])

summary(tail(ERA13,20))
summary(head(ERA13,20))

summary(head(KRate13,20))
summary(tail(KRate13,20))

summary(tail(ERA13,20))
summary(head(BABIP13,20))

summary(BABIP14[(rank(BABIP13) <= 20)])
summary(tail(BABIP13,20))

summary(ERA14[(rank(-ERA13) <= 20)])
summary(KRate14[(rank(KRate13) <= 20)])

summary(head(KRate13,20))
summary(KRate14[(rank(-KRate13) <= 20)])
summary(tail(KRate13,20))
summary(KRate14[(rank(KRate13) <= 20)])

summary(head(ERA13,20))
summary(ERA14[(rank(ERA13) <= 20)])
summary(tail(ERA13,20))
summary(ERA14[(rank(-ERA13) <= 20)])

summary(head(BABIP13,20))
summary(BABIP14[(rank(BABIP13) <= 20)])
summary(tail(BABIP13,20))
summary(BABIP14[(rank(-BABIP13) <= 20)])
fname = file.choose()
Teams = read.csv(fname)
summary(Teams)

# When exclusively using just one data frame, this command can
TB = (H + X2B + 2*X3B + 3*HR)
fname = file.choose()
Teams = read.csv(fname)
Teams <- read.delim("./Teams.csv", header=F, quote="")
View(Teams)
summary(Teams)
attach(Teams)
View(PitcherRegression)

TB = (H + X2B + 2*X3B + 3*HR)
View(Teams)
View(Teams)
SLG = TB / AB
OBP = (H + BB + HBP) / (AB + BB + HBP + SF)
OPS = SLG + OBP
BRA = SLG * OBP
RCB = (TB*(H + BB)) / (AB + BB)
XRR = (.5*(H-HR-X3B-X2B))+(.72*X2B)+(1.04*X3B)+(1.44*HR)+.33*(HBP+BB)+.18*SB-.32*CS-.098*(AB-H)
LWTs = (.46*(H-HR-X3B-X2B))+(.8*X2B)+(1.02*X3B)+(1.4*HR)+.33*(HBP+BB)+.3*SB-.6*CS-.25*(AB-H)
LWTs = (.46*(H-HR-X3B-X2B))+(.8*X2B)+(1.02*X3B)+(1.4*HR)+.33*(HBP+BB)+.3*SB-.6*CS-.25*(AB-H)+701.2
Teams["RCB"] = RCB
Teams["XRR"] = XRR
Teams["LWT"] = LWTs
Teams_Runs_est = Teams[c("R", "RCB", "XRR", "LWT")]

View(Teams_Runs_est)

library(ggplot2)
RvRCB = lm(R~RCB)

#summary(RvRCB)
plot(RCB,R)
abline(RvRCB)
summary(RvRCB)$r.squared
cor(R,RCB)
RvXRR = lm(R~XRR)

#summary(RvXRR)
plot(XRR,R)
abline(RvXRR)
summary(RvXRR)$r.squared
cor(R,XRR)
Teams_Runs_est = Teams[c("R", "RCB", "XRR", "LWT")]
pairs(Teams_Runs_est)
cor(R,XRR)
detach(Teams)
RvLWT = lm(Teams$R~Teams$LWT)
plot(Teams$LWT,Teams$R)
abline(RvLWT)
summary(RvLWT)$r.squared

setwd("./PythagoreanFormula")
BJamesData <- read.csv(file.choose())
plot(BJamesData$RunsRatio, BJamesData$WinRatio,
plot(BJamesData$RunRatio, BJamesData$WinRatio,
main="Run Ratio v. Win Ratio")

#adding log(x) versions to our data frame
BJamesData$WinRatio_log <- with(BJamesData, log(WinRatio))
BJamesData$RunRatio_log <- with(BJamesData, log(RunRatio))
View(BJamesData)
plot(BJamesData$RunRatio, BJamesData$WinRatio,
main="Run Ratio v. Win Ratio")
BJamesData$WinRatio_log <- with(BJamesData, log(WinRatio))
BJamesData$RunRatio_log <- with(BJamesData, log(RunRatio))
View(BJamesData)
plot(BJamesData$RunRatio_log, BJamesData$WinRatio_log,
main="Log Runs Ratio v. Log Win Ratio")

BJames_exponent1 <- lm(BJamesData$WinRatio_log ~ BJamesData$RunRatio_log)
BJames_exponent1

setwd("./Functions_and_loops_in_R")

square <- function(number){
return(number*number)
square(10)
square(9)
square(10)
square(9)
square <- function(number){
return(number*number)
}

square(10)
square(9)

birthday <- function(name,age){
paste("Happy Birthday ",
age,
"th Birthday, ",
name,
'!', sep = '')
}

birthday('Ethan',20)
myFunction <- function(sin,doub,trip,homer,AB){
return((sin+2*doub+3*trip+4*homer)/AB)}

myFunction(7,2,1,5,50)
for(i in 1:10){
print(i*2)
}

test_data <- data.frame(
num = c(1,2,3,4,5),
x = rnorm(n = 5,mean = 5,sd = 2),
y = rnorm(n = 5,mean = 5,sd = 2)
)

y = rnorm(n = 5,mean = 5,sd = 2)
View(test_data)
test_data <- data.frame(
num = c(1,2,3,4,5),
x = rnorm(n = 5,mean = 5,sd = 2),
y = rnorm(n = 5,mean = 5,sd = 2)
)

View(test_data)

qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))

for(i in 1:nrow(test_data)){
with(test_data,print(
c(num[i],x[i],y[i],sqrt(square(x[i]) + square(y[i])))))
for(i in 1:nrow(test_data)){
with(test_data,print(
c(num[i],x[i],y[i],sqrt(square(x[i]) + square(y[i])))))
}

qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))
test_data <- data.frame(
num = c(1,2,3,4,5),
x = rnorm(n = 5,mean = 5,sd = 2),
y = rnorm(n = 5,mean = 5,sd = 2)
)

qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))
qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))

test_data <- data.frame(
num = c(1,2,3,4,5),
x = rnorm(n = 5,mean = 5,sd = 2),
y = rnorm(n = 5,mean = 5,sd = 2)
)

View(test_data)

qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))

for(i in 1:nrow(test_data)){
with(test_data,print(
c(num[i],x[i],y[i],sqrt(square(x[i]) + square(y[i])))))
}

test_data <- data.frame(
num = c(1,2,3,4,5),
x = rnorm(n = 5,mean = 5,sd = 2),
y = rnorm(n = 5,mean = 5,sd = 2)
)

qplot(test_data$x,test_data$y,xlim = c(0,10),ylim = c(0,10))
with(test_data,cor(x,y))

#spurious correlation!
#print num, x, y, distance between points and (0,0)
for(i in 1:nrow(test_data)){
with(test_data,print(
c(num[i],x[i],y[i],sqrt(square(x[i]) + square(y[i])))))
}

greater50 <- function(HRVector,threshold){
count <- 0
for(i in 1:3){
count = count + ifelse(HRVector[i] > threshold, 1, 0)
}

fifty <- count/length(HRVector) >= .5
return(fifty)
}

greater50(c(10,15,20),14)
greater50(c(10,14,20),14)

greater50 <- function(HRVector,threshold){
fifty <- HRVector > threshold
return(fifty)
}

greater50(c(10,15,20),14)
greater50(c(10,14,20),14)

greater50 <- function(){
count <- 0
for(i in 1:length(HRVector)){
count = count + ifelse(HRVector[i] > threshold, 1, 0)
}

fifty <- count/length(HRVector) >= .5
return(fifty)
}

greater50(c(10,15,20),14)
greater50(c(10,14,20),14)

greater50 <- function(){
count <- 0
for(i in 1:length(HRVector)){
count = count + ifelse(HRVector[i] > threshold, 1, 0)
}
fifty <- count/length(HRVector) >= .5
return(fifty)
}

greater50(c(10,15,20),14)

greater50 <- function(HRVector,threshold){
count <- 0
for(i in 1:length(HRVector)){
count = count + ifelse(HRVector[i] > threshold, 1, 0)
}
fifty <- count/length(HRVector) >= .5
return(fifty)
}

greater50(c(10,14,20),14)


retrosheet <- read.csv('retrosheet00-09.csv',stringsAsFactors = FALSE)
str(retrosheet)
retrosheet$home_win <- ifelse(retrosheet$home_score > retrosheet$visitor_score,1,0)
sum(retrosheet$home_win)/nrow(retrosheet)
## retrosheet$weekend <- ifelse(retrosheet$day == "Sat" OR retrosheet$day == "Sun", 1,0)
retrosheet$weekendsat <- ifelse(retrosheet$day == "Sat", 1,0)
retrosheet$weekendsun <- ifelse(retrosheet$day == "Sun", 1,0)
sum(retrosheet$weekendsat)/nrow(retrosheet)
sum(retrosheet$weekendsat)/nrow(retrosheet)
sum(retrosheet$weekendsun)/nrow(retrosheet)
we = 0.1612531 + 0.160224
we

retrosheet$weekendsat <- ifelse(retrosheet$day == "Sat" | retrosheet$day = "Sun", 1,0)
retrosheet$weekendsat <- ifelse(day == "Sat" | day = "Sun", 1,0)
retrosheet$weekend <- subset(retrosheet, retrosheet$day == "Sat" | retrosheet$day == "Sun")
summary(retrosheet$weekend)
x = 7809 / 24291
x

weekend <- subset(retrosheet, retrosheet$day == "Sat" | retrosheet$day == "Sun")
summary(weekend)
str(weekend)

W_G_WP <- function(team,df){
W <- 0
G <- 0
sub <- subset(df,home == team | visitor == team)
for(i in 1:nrow(sub)){
W <- W + ifelse(sub$home[i] == team, sub$home_win[i],
ifelse(sub$home_win[i] == 1,0,1))
G <- G + 1
}
return(c(W,G,W/G))
W_G_WP <- function(team,df){
W <- 0
G <- 0
sub <- subset(df,home == team | visitor == team)
for(i in 1:nrow(sub)){
W <- W + ifelse(sub$home[i] == team, sub$home_win[i],
ifelse(sub$home_win[i] == 1,0,1))
G <- G + 1
}
return(c(W,G,W/G))
}
W_G_WP("BOS",retrosheet)
W_G_WP <- function(team,df){
W <- 0
G <- 0
sub <- subset(df,home == team | visitor == team)
for(i in 1:nrow(sub)){
W <- W + ifelse(sub$home[i] == team, sub$home_win[i],
ifelse(sub$home_win[i] == 1,0,1))
G <- G + 1
}
return(c(W,G,W/G))
}

W_G_WP("BOS",retrosheet)
W_G_WP <- function(team,df){
W <- 0
G <- 0
sub <- subset(df,home == team | visitor == team)
for(i in 1:nrow(sub)){
W <- W + ifelse(sub$home[i] == team, sub$home_win[i],
ifelse(sub$home_win[i] == 1,0,1))
G <- G + 1
}
return(c(W,G,W/G))
}

W_G_WP("BOS",retrosheet)

W_G_WP <- function(team,df){
W <- 0
G <- 0
sub <- subset(df,home == team | visitor == team)
for(i in 1:nrow(sub)){
W <- W + ifelse(sub$home[i] == team, sub$home_win[i],
ifelse(sub$home_win[i] == 1,0,1))
G <- G + 1
}
return(c(W,G,W/G))
}

W_G_WP("BOS",retrosheet)

results_df <- data.frame(team = unique(retrosheet$home),
W = 0,
G = 0,
WP = 0,
stringsAsFactors = FALSE)

for(i in 1:nrow(results_df)){
team <- results_df$team[i]
results_df[i,] <- c(team,W_G_WP(team,retrosheet))
print(c(team,W_G_WP(team,retrosheet)))
}

View(results_df)
dataframe$weekend <- weekend
retrosheet$weekend <- weekend
retrosheet$weekend <- ifelse(retrosheet$day == "Sat" | retrosheet$day == "Sun", 1,0)
View(retrosheet)
str(restrosheet)
str(retrosheet)
weekWP <- function(team,df){
sub <- subset(df,home == team | visitor == team)
weekend <- subset(sub,weekend == 1)
week <- subset(sub,weekend == 0)
weekWP <- W_G_WP(team,week)[3]
weekendWP <- W_G_WP(team,weekend)[3]
return(c(team,weekWP,weekendWP))
}

weekWP
weekWP <- function(team,df){
sub <- subset(df,home == team | visitor == team)
weekend <- subset(sub,weekend == 1)
week <- subset(sub,weekend == 0)
weekWP <- W_G_WP(team,week)[3]
weekendWP <- W_G_WP(team,weekend)[3]
return(c(team,weekWP,weekendWP))
}



weekWP("BOS",retrosheet)
results_df <- data.frame(team = unique(retrosheet$home),
W = 0,
G = 0,
WP = 0,
stringsAsFactors = FALSE)

for(i in 1:nrow(results_df)){
team <- results_df$team[i]
results_df[i,] <- c(team,weekWP(team,retrosheet))
print(c(team,weekWP(team,retrosheet)))
}


View(results_df)
